@model CheckoutViewModel
@{
    ViewData["Title"] = "Checkout";
    Layout = "_Layout"; 
    List<CartItem> cartItems = ViewBag.CartItems;
    decimal cartTotal = ViewBag.CartTotal;
}

<div class="container my-5">
    <h2 class="mb-4">Checkout</h2>

    @* Display any error messages from TempData (e.g., "Please log in") *@
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["ErrorMessage"]
        </div>
    }

    <div class="row">
        <div class="col-lg-7 col-md-8">
            <h4>Shipping Information</h4>
            <hr />
            <form asp-controller="Checkout" asp-action="PlaceOrder" method="post">
                @* This hidden input helps protect against Cross-Site Request Forgery (CSRF) attacks *@
                @Html.AntiForgeryToken()

                @* Display validation errors for the entire form if ModelState is invalid *@
                <div asp-validation-summary="All" class="text-danger mb-3"></div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label asp-for="ShippingName" class="form-label"></label>
                        <input asp-for="ShippingName" class="form-control" />
                        <span asp-validation-for="ShippingName" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="ShippingEmail" class="form-label"></label>
                        <input asp-for="ShippingEmail" class="form-control" />
                        <span asp-validation-for="ShippingEmail" class="text-danger"></span>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label asp-for="ShippingPhone" class="form-label"></label>
                        <input asp-for="ShippingPhone" class="form-control" />
                        <span asp-validation-for="ShippingPhone" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="ShippingPostCode" class="form-label"></label>
                        <input asp-for="ShippingPostCode" class="form-control" />
                        <span asp-validation-for="ShippingPostCode" class="text-danger"></span>
                    </div>
                </div>

                <div class="mb-3">
                    <label asp-for="ShippingAddress" class="form-label"></label>
                    <input asp-for="ShippingAddress" class="form-control" />
                    <span asp-validation-for="ShippingAddress" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="ShippingCity" class="form-label"></label>
                    <input asp-for="ShippingCity" class="form-control" />
                    <span asp-validation-for="ShippingCity" class="text-danger"></span>
                </div>

                <h4 class="mt-4">Order Summary</h4>
                <hr />
                @* Check if there are items in the cart to display them *@
                @if (cartItems != null && cartItems.Any())
                {
                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th class="text-center">Quantity</th>
                                <th class="text-end">Price (Tickets)</th>
                                <th class="text-end">Subtotal (Tickets)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in cartItems)
                            {
                                <tr>
                                    <td>@item.Name</td>
                                    <td class="text-center">@item.Quantity</td>
                                    <td class="text-end">@item.Price.ToString("F2")</td>
                                    <td class="text-end">@((item.Price * item.Quantity).ToString("F2"))</td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="3" class="text-end"><strong>Total Order Value:</strong></td>
                                <td class="text-end"><strong>@cartTotal.ToString("F2") Tickets</strong></td>
                            </tr>
                        </tfoot>
                    </table>
                }
                else
                {
                    <div class="alert alert-warning" role="alert">
                        No items in your cart to checkout. Please go back to the <a asp-controller="Home" asp-action="Index">home page</a> to add items.
                    </div>
                }

                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-success btn-lg mt-3">Place Order</button>
                    <a asp-controller="Cart" asp-action="Cart" class="btn btn-outline-secondary mt-2">Return to Cart</a>
                </div>
            </form>
        </div>

        @* Optional: You can add a side column here for additional information, e.g., payment method details or ads *@
        <div class="col-lg-5 col-md-4">
            @* Example of a card for additional info, currently commented out
            <div class="card mt-4 mt-md-0">
                <div class="card-body">
                    <h5 class="card-title">Payment Method (Example)</h5>
                    <p class="card-text">
                        For this example, we are using a "PrizePoints" deduction system.
                        Your current PrizePoints will be deducted upon order placement.
                    </p>
                    <p class="card-text">
                        Total tickets needed: <strong>@cartTotal.ToString("F2") Tickets</strong>
                    </p>
                </div>
            </div>
            *@
        </div>
    </div>
</div>

@section Scripts {
    @{
        // This partial view renders the necessary JavaScript files for client-side validation
        // (jquery.validate.js and jquery.validate.unobtrusive.js)
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}