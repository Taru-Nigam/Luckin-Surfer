@* No model declaration here because we're using ViewBag for simplicity.
   If you prefer a strong-typed ViewModel for Dashboard, create one and
   pass it from the controller, then declare it here like @model MyDashboardViewModel. *@

@{
    ViewData["Title"] = "Employee Dashboard";
    Layout = "_EmployeeLayout";
}

<section class="employee-dashboard-section">
    <div class="container">
        <h2 class="employee-section-title">Dashboard Overview</h2>

        <div class="dashboard-grid">
            <div class="employee-card metric-card">
                <h3 class="employee-card-title">Tickets Collected Today</h3>
                <p class="value">@ViewBag.TicketsCollectedToday</p>
                <p class="label">Total tickets from all machines</p>
            </div>
            <div class="employee-card metric-card">
                <h3 class="employee-card-title">Prizes Redeemed Today</h3>
                <p class="value">@ViewBag.PrizesRedeemedToday</p>
                <p class="label">Prizes given out</p>
            </div>
            <div class="employee-card metric-card">
                <h3 class="employee-card-title">Current Stock Level</h3>
                <p class="value">@ViewBag.CurrentStockLevel</p>
                <p class="label">Overall inventory status</p>
            </div>
            <div class="employee-card quick-links">
                <h3 class="employee-card-title">Quick Links</h3>
                <ul>
                    <li><a href="@Url.Action("AddPrize", "Employee")">Add New Prize</a></li>
                    <li><a href="@Url.Action("PrizeStock", "Employee")">View Prize Stock</a></li>
                    <li><a href="@Url.Action("RedeemedPrizes", "Employee")">See Redeemed Prizes</a></li>
                    <li><a href="@Url.Action("AuditLog", "Employee")">Access Audit Log</a></li>
                    @* Optional: Link to a daily ticket collection form/button *@
                    @* <li><a href="#" onclick="document.getElementById('updateTicketsForm').submit(); return false;">Update Daily Tickets</a></li> *@
                </ul>
            </div>
            @* Optional: Display low stock prizes directly on the dashboard *@
            @if (ViewBag.LowStockPrizesList != null && ((List<GameCraft.Models.Product>)ViewBag.LowStockPrizesList).Any())
            {
                <div class="employee-card low-stock-alert">
                    <h3 class="employee-card-title">Low Stock Alerts</h3>
                    <ul>
                        @foreach (var prize in (List<GameCraft.Models.Product>)ViewBag.LowStockPrizesList)
                        {
                            <li>@prize.Name (Qty: @prize.Quantity)</li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
</section>

@* Optional: A hidden form for testing UpdateDailyTickets action *@
@* <form id="updateTicketsForm" asp-action="UpdateDailyTickets" asp-controller="Employee" method="post" style="display:none;">
    <input type="hidden" name="collectedAmount" value="500" /> @* Example amount *
</form> *@
