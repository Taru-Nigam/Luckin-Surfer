@model List<CartItem>

@{
    ViewData["Title"] = "Your Shopping Cart";
    decimal total = 0; // Initialize total for calculation
}

<h2>Your Shopping Cart</h2>

@if (Model == null || !Model.Any())
{
    <div class="alert alert-info" role="alert">
        Your cart is empty. <a asp-controller="Home" asp-action="Index">Continue shopping!</a>
    </div>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th></th>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Subtotal</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var subtotal = item.Price * item.Quantity;
                total += subtotal; // Add to overall total

                <tr id="cartItem_@item.ProductId">
                    @* Added an ID for potential AJAX updates/removals *@
                    <td>
                        @* Use the GetImage action to display the image *@
                        <img src="@Url.Action("GetImage", "Product", new { id = item.ProductId })" alt="@item.Name" style="width: 50px; height: 50px; object-fit: cover;" />
                    </td>
                    <td>@item.Name</td> @* Use item.Name as per your CartItem model *@
                    <td>@item.Price.ToString("F2")</td>
                    <td>
                        <input type="number" value="@item.Quantity"
                               class="form-control quantity-input"
                               data-product-id="@item.ProductId"
                               min="1" style="width: 80px;" />
                    </td>
                    <td>@subtotal.ToString("F2")</td>
                    <td>
                        <button class="btn btn-danger btn-sm remove-from-cart-btn"
                                data-product-id="@item.ProductId">
                            Remove
                        </button>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="4" class="text-end"><strong>Total:</strong></td>
                <td><strong>@total.ToString("F2")</strong></td>
                <td></td>
            </tr>
        </tfoot>
    </table>

    <div class="d-flex justify-content-between mt-3">
        <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">Continue Shopping</a>
        <button type="button" class="btn btn-success" onclick="location.href='/Checkout/Index'">Proceed to Checkout</button>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Event listener for quantity change
            $(document).on('change', '.quantity-input', function () {
                var productId = $(this).data('product-id');
                var newQuantity = parseInt($(this).val());

                if (isNaN(newQuantity) || newQuantity < 1) {
                    alert("Please enter a valid quantity (1 or more).");
                    $(this).val($(this).data('previous-quantity') || 1); // Revert or set to 1
                    return;
                }
                $(this).data('previous-quantity', newQuantity); // Store current quantity

                $.post("/Cart/UpdateCartQuantity", { productId: productId, newQuantity: newQuantity }, function (data) {
                    if (data.success) {
                        location.reload(); // Simple reload for now to update totals and subtotals
                    } else {
                        alert("Failed to update quantity.");
                    }
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    console.error("AJAX Error:", textStatus, errorThrown);
                    alert("An error occurred while updating quantity. Please try again.");
                });
            });

            // Event listener for remove button
            $(document).on('click', '.remove-from-cart-btn', function () {
                if (!confirm("Are you sure you want to remove this item from your cart?")) {
                    return;
                }

                var productId = $(this).data('product-id');

                $.post("/Cart/RemoveFromCart", { productId: productId }, function (data) {
                    if (data.success) {
                        $('#cartItem_' + productId).remove();

                        if (typeof updateCartCount === 'function') {
                            updateCartCount(data.cartCount);
                        } else {
                             // Fallback if updateCartCount from _Layout isn't global
                             const cartCountSpan = document.getElementById('cartCount');
                             if (cartCountSpan) {
                                 cartCountSpan.innerText = data.cartCount;
                                 cartCountSpan.style.display = data.cartCount > 0 ? 'block' : 'none';
                             }
                        }

                        if (data.cartCount === 0) {
                            $('.table-bordered').hide();
                            $('.d-flex.justify-content-between.mt-3').hide();
                            $('h2').after('<div class="alert alert-info" role="alert">Your cart is empty. <a href="/">Continue shopping!</a></div>');
                        } else {
                            location.reload();
                        }
                    } else {
                        alert("Failed to remove item.");
                    }
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    console.error("AJAX Error:", textStatus, errorThrown);
                    alert("An error occurred while removing item. Please try again.");
                });
            });
        });
    </script>
}