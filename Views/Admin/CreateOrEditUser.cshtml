@model Customer
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = Model.CustomerId == 0 ? "Create User" : "Edit User";
}

<h1 class="mb-6">@ViewData["Title"]</h1>

<div class="form-container">
    <form asp-action="CreateOrEditUser" asp-controller="Admin" method="post" class="form-admin" enctype="multipart/form-data" novalidate>
        <input type="hidden" asp-for="CustomerId" />
        @Html.AntiForgeryToken() @* Add anti-forgery token *@

        <div class="form-group">
            <label>Current Avatar:</label>
            <img id="currentAvatarPreview" src="@(Model.AvatarImageData != null ? Url.Action("GetAvatarImage", "Account", new { customerId = Model.CustomerId }) : Url.Action("GetDefaultAvatar", "Account"))" alt="Current Avatar" style="width: 100px; height: 100px; border-radius: 50%; object-fit: cover; margin-bottom: 10px;" />
        </div>

        <div class="form-group">
            <label>Choose Pre-set Avatar:</label>
            <div class="avatar-selection-options">
                @for (int i = 1; i <= 4; i++)
                {
                    var avatarPath = $"/images/avatar-00{i}.png";
                    <label class="avatar-option-label">
                        <input type="radio" name="SelectedAvatarPath" value="@avatarPath"
                               class="avatar-radio-admin" data-avatar-path="@avatarPath" />
                        <img src="@avatarPath" class="avatar-image-admin" />
                    </label>
                }
                <label class="avatar-option-label">
                    <input type="radio" name="SelectedAvatarPath" value="/images/default-avatar.png"
                           class="avatar-radio-admin" data-avatar-path="/images/default-avatar.png" />
                    <img src="/images/default-avatar.png" class="avatar-image-admin" />
                </label>
            </div>
        </div>

        <div class="form-group">
            <label for="avatarFile">Upload Custom Avatar:</label>
            <input type="file" id="avatarFile" name="avatarFile" class="form-input" accept="image/*" />
        </div>

        <div class="form-group">
            <label asp-for="Name"></label>
            <input asp-for="Name" class="form-input" />
            <span asp-validation-for="Name" class="text-error"></span>
        </div>

        <div class="form-group">
            <label asp-for="Email"></label>
            <input asp-for="Email" type="email" class="form-input" />
            <span asp-validation-for="Email" class="text-error"></span>
        </div>

        <div class="form-group">
            <label asp-for="Phone"></label>
            <input asp-for="Phone" class="form-input" />
            <span asp-validation-for="Phone" class="text-error"></span>
        </div>

        <div class="form-group">
            <label asp-for="Address"></label>
            <input asp-for="Address" class="form-input" />
            <span asp-validation-for="Address" class="text-error"></span>
        </div>

        <div class="form-group">
            <label asp-for="City"></label>
            <input asp-for="City" class="form-input" />
            <span asp-validation-for="City" class="text-error"></span>
        </div>

        <div class="form-group">
            <label asp-for="PostCode"></label>
            <input asp-for="PostCode" class="form-input" />
            <span asp-validation-for="PostCode" class="text-error"></span>
        </div>

        <div class="form-group">
            <label asp-for="UserType">User Role / Permissions</label>
            <select asp-for="UserType" class="form-select" asp-items="ViewBag.UserTypes" id="userTypeSelect">
                <option value="">-- Select Role --</option>
            </select>
            <span asp-validation-for="UserType" class="text-error"></span>
        </div>

        <div class="form-group" id="adminKeyGroup" style="display:@(Model.UserType == 0 ? "block" : "none")">
            <label asp-for="AdminKey">Admin Key</label>
            <input asp-for="AdminKey" class="form-input" readonly />
            <span asp-validation-for="AdminKey" class="text-error"></span>
        </div>

        <div class="form-group">
            <label asp-for="PrizePoints">Prize Points</label>
            <input asp-for="PrizePoints" class="form-input" />
            <span asp-validation-for="PrizePoints" class="text-error"></span>
        </div>

        <div class="form-group">
            <label asp-for="GameCraftCardNumber">GameCraft Card Number</label>
            <input asp-for="GameCraftCardNumber" class="form-input" />
            <span asp-validation-for="GameCraftCardNumber" class="text-error"></span>
        </div>

        <div class="form-group">
            <label asp-for="PasswordHash">Password</label>
            @if (Model.CustomerId == 0) // Password is required for new users
            {
                <input asp-for="PasswordHash" type="password" class="form-input" required />
            }
            else // Password is optional for existing users (only if changing)
            {
                <input asp-for="PasswordHash" type="password" class="form-input" placeholder="Leave blank to keep current password" />
            }
            <span asp-validation-for="PasswordHash" class="text-error"></span>
        </div>

        <button type="submit" class="btn-primary">Save Changes</button>
        <a href="@Url.Action("ManageUsers", "Admin")" class="btn-secondary ml-4">Cancel</a>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function() {
            // Handle pre-set avatar selection
            $('.avatar-radio-admin').change(function() {
                const selectedPath = $(this).data('avatar-path'); // Get path from data attribute
                $('#currentAvatarPreview').attr('src', selectedPath);
                $('#avatarFile').val(''); // Clear custom file input if a pre-set avatar is chosen
            });

            // Handle custom avatar upload preview
            $('#avatarFile').change(function() {
                if (this.files && this.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function(e) {
                        $('#currentAvatarPreview').attr('src', e.target.result);
                    };
                    reader.readAsDataURL(this.files[0]);
                    $('.avatar-radio-admin').prop('checked', false); // Uncheck all radio buttons
                }
            });

            // Set initial checked state for pre-set avatars based on current image
            const currentAvatarSrc = $('#currentAvatarPreview').attr('src');
            $('.avatar-radio-admin').each(function() {
                const dataPath = $(this).data('avatar-path');
                const fullPath = new URL(dataPath, window.location.origin).href;
                if (currentAvatarSrc.includes(fullPath)) {
                    $(this).prop('checked', true);
                    return false; // Break loop
                }
            });

            document.getElementById('userTypeSelect').addEventListener('change', function() {
                const adminKeyGroup = document.getElementById('adminKeyGroup');
                const adminKeyInput = document.getElementById('AdminKey');

                if (this.value == "0") { // Assuming "0" is the value for Admin UserType
                    const randomAdminKey = generateRandomAdminKey();
                    adminKeyInput.value = randomAdminKey;
                    adminKeyGroup.style.display = 'block';
                } else {
                    adminKeyInput.value = '';
                    adminKeyGroup.style.display = 'none';
                }
            });

            function generateRandomAdminKey(length = 16) {
                const validChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
                let result = '';
                for (let i = 0; i < length; i++) {
                    result += validChars.charAt(Math.floor(Math.random() * validChars.length));
                }
                return result;
            }
        });
    </script>
}
