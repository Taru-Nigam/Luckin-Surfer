@model List<GameCraft.Models.Customer>
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Manage Users";
}

<h1 class="mb-6">Manage Users</h1>

@if (TempData["Message"] != null)
{
    <div class="alert alert-success">@TempData["Message"]</div>
}

<a href="@Url.Action("CreateOrEditUser", "Admin")" class="btn-primary mb-4">Create New User</a>
<div class="user-list-container">

    @if (Model.Count == 0)
    {
        <p>No users found.</p>
    }
    else
    {
        <table class="table-admin-list">
            <thead>
                <tr>
                    <th>Customer ID</th>
                    <th>Avatar</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th>User Role</th>
                    <th>Prize Points</th>
                    <th>GameCraft Card Number</th>
                    <th>Password</th>
                    <th>Admin Key</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    <tr>
                        <td>@user.CustomerId</td>
                        <td>
                            <img src="@(user.AvatarImageData != null ? Url.Action("GetAvatarImage", "Account", new { customerId = user.CustomerId }) : Url.Action("GetDefaultAvatar", "Account"))" alt="Avatar" style="width: 50px; height: 50px; border-radius: 50%;" />
                        </td>
                        <td>@user.Name</td>
                        <td>@user.Email</td>
                        <td>@user.Phone</td>
                        <td>
                            @(ViewBag.UserTypes != null
                                                ? ((List<SelectListItem>)ViewBag.UserTypes).FirstOrDefault(ut => ut.Value == user.UserType.ToString())?.Text ?? "Unknown"
                                                : "Unknown")
                </td>
                <td>@user.PrizePoints</td>
                <td>@user.GameCraftCardNumber</td>
                <td>
                    <input type="text" id="password_@user.CustomerId" class="form-control" value="@user.PasswordHash" readonly />
                    <button type="button" class="btn btn-secondary" onclick="togglePassword('@user.CustomerId')">Show</button>
                </td>
                <td>
                    @if (user.UserType == 0) // Assuming 0 is the value for Admin UserType
                            {
                                <input type="password" id="adminKey_@user.CustomerId" class="form-control" value="@user.AdminKey" readonly />
                                <button type="button" class="btn btn-secondary" onclick="toggleAdminKey('@user.CustomerId')">Show</button>
                            }
                            else
                            {
                                <span>N/A</span>
                            }
                        </td>
                        <td>
                            <a href="@Url.Action("CreateOrEditUser", "Admin", new { id = user.CustomerId })" class="btn-action btn-edit">Edit</a>
                            <form asp-action="DeleteUser" asp-controller="Admin" method="post" class="inline-form" onsubmit="return confirm('Are you sure you want to delete this user?');" style="display:inline;">
                                <input type="hidden" name="id" value="@user.CustomerId" />
                                <button type="submit" class="btn-action btn-delete">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@section Scripts {
    <script>
        function togglePassword(userId) {
            const passwordInput = document.getElementById(`password_${userId}`);
            if (passwordInput.type === "password") {
                passwordInput.type = "text";
            } else {
                passwordInput.type = "password";
            }
        }

        function toggleAdminKey(userId) {
            const adminKeyInput = document.getElementById(`adminKey_${userId}`);
            if (adminKeyInput.type === "password") {
                adminKeyInput.type = "text";
            } else {
                adminKeyInput.type = "password";
            }
        }
    </script>
}