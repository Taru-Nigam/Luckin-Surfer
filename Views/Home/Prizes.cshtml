@model GameCraft.ViewModels.PrizeCatalogViewModel
@{
    ViewData["Title"] = "Prize Catalog";
    Layout = "_Layout"; // Ensures this view uses your main public layout
}

<section class="products-catalog-section">
    <div class="container">
        <h2 class="section-title">Product Catalog</h2>

        <div class="products-filters-search">
            <div class="filter-group">
                <label for="category-filter">Category - Dropdown:</label>
                <select id="category-filter" class="form-control">
                    <option value="all">All</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category.CategoryId">@category.Name</option>
                    }
                </select>
            </div>
            <div class="search-group">
                <label for="product-search">Search:</label>
                <input type="text" id="product-search" placeholder="e.g. Enter Product Name..." class="form-control" />
            </div>
        </div>

        <div class="prizes-grid">
            @if (Model.Products != null && Model.Products.Any())
            {
                foreach (var product in Model.Products)
                {
                    <div class="prize-card" data-category="@product.CategoryId">
                        <div class="prize-image-container">
                            <img src="@Url.Action("GetImage", "Product", new { id = product.ProductId })" alt="@product.Name" class="prize-image" onerror="this.onerror=null;this.src='/images/placeholder_product.png';" />
                        </div>
                        <h3 class="prize-name">@product.Name</h3>
                        <p class="ticket-cost">TICKET COST: @product.Price Tickets</p>
                        <button class="quick-view-button" onclick="location.href='@Url.Action("Details", "Product", new { id = product.ProductId })'">Quick View</button>
                    </div>
                }
            }
            else
            {
                <p class="no-products-message">No products available at the moment. Check back soon!</p>
            }
        </div>
    </div>
</section>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Basic client-side search functionality (filters displayed cards)
            $('#product-search').on('keyup', function() {
                var searchText = $(this).val().toLowerCase();
                $('.prize-card').each(function() { // Updated class to match CSS
                    var productName = $(this).find('.prize-name').text().toLowerCase(); // Updated class to match CSS
                    if (productName.includes(searchText)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });

            // Filter by category
            $('#category-filter').change(function() {
                const categoryId = $(this).val();
                $('.prize-card').each(function() { // Updated class to match CSS
                    const show = (categoryId === 'all') ||
                                ($(this).data('category') == categoryId);
                    $(this).toggle(show);
                });
            });

            // Trigger initial filter/search if values are pre-set (e.g., after back button)
            $('#product-search').trigger('keyup');
            $('#category-filter').trigger('change');
        });
    </script>
}